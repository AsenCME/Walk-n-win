{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"moment","data":{"isAsync":false}},{"name":"../../firebase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fetchCodes = fetchCodes;\n  exports.LAST_FETCH = exports.FETCH_CODE_ERROR = exports.FETCH_CODE_SUCCESS = exports.FETCH_CODES_START = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _moment = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"moment\"));\n\n  var _firebase = _$$_REQUIRE(_dependencyMap[3], \"../../firebase\");\n\n  var FETCH_CODES_START = 'FETCH_CODES_START';\n  exports.FETCH_CODES_START = FETCH_CODES_START;\n  var FETCH_CODE_SUCCESS = 'FETCH_CODE_SUCCESS';\n  exports.FETCH_CODE_SUCCESS = FETCH_CODE_SUCCESS;\n  var FETCH_CODE_ERROR = 'FETCH_CODE_ERROR';\n  exports.FETCH_CODE_ERROR = FETCH_CODE_ERROR;\n  var LAST_FETCH = 'LAST_FETCH';\n  exports.LAST_FETCH = LAST_FETCH;\n\n  function fetchCodes() {\n    return function _callee(dispatch, getState) {\n      var state, lastFetch, result, companies, promiseArr, companyCodes;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(startCodeFetching());\n              state = getState();\n              lastFetch = state.codes.lastFetch;\n              console.log(lastFetch);\n              _context.prev = 4;\n              result = [];\n              _context.next = 8;\n              return _regenerator.default.awrap(_firebase.firestore.collection('companies').limit(5).get());\n\n            case 8:\n              companies = _context.sent;\n              promiseArr = [];\n              companies.forEach(function (company) {\n                var data = company.data();\n                result.push({\n                  storeName: data.name,\n                  logoImage: data.logoUrl,\n                  backgroundImage: data.backgroundUrl,\n                  codes: []\n                });\n                promiseArr.push(_firebase.firestore.collection('companies').doc(company.id).collection('codes').get());\n              });\n              _context.next = 13;\n              return _regenerator.default.awrap(Promise.all(promiseArr));\n\n            case 13:\n              companyCodes = _context.sent;\n              companyCodes.forEach(function (item, i) {\n                if (!item.empty) {\n                  item.docs.forEach(function (code) {\n                    code = code.data();\n                    var codeObj = {\n                      name: code.name,\n                      description: code.description,\n                      inStock: code.currentStock,\n                      discount: code.discount,\n                      price: code.price,\n                      codeVariations: code.codes\n                    };\n                    result[i].codes.push(codeObj);\n                  });\n                }\n              });\n              dispatch(codeFetchingSuccess(result));\n              dispatch(codeLastFetch(Math.floor(Date.now() / 1000)));\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](4);\n              dispatch(codeFetchingError(_context.t0.message));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 19]]);\n    };\n  }\n\n  function startCodeFetching() {\n    return {\n      type: FETCH_CODES_START\n    };\n  }\n\n  function codeFetchingSuccess(codes) {\n    return {\n      type: FETCH_CODE_SUCCESS,\n      codes: codes\n    };\n  }\n\n  function codeFetchingError(error) {\n    return {\n      type: FETCH_CODE_ERROR,\n      error: error\n    };\n  }\n\n  function codeLastFetch(lastFetch) {\n    return {\n      type: LAST_FETCH,\n      lastFetch: lastFetch\n    };\n  }\n});","map":[[12,0,1,0],[14,0,2,0],[16,0,4,7],[16,6,4,13,"FETCH_CODES_START"],[16,23,4,30],[16,26,4,33],[16,45,4,7],[18,0,5,7],[18,6,5,13,"FETCH_CODE_SUCCESS"],[18,24,5,31],[18,27,5,34],[18,47,5,7],[20,0,6,7],[20,6,6,13,"FETCH_CODE_ERROR"],[20,22,6,29],[20,25,6,32],[20,43,6,7],[22,0,7,7],[22,6,7,13,"LAST_FETCH"],[22,16,7,23],[22,19,7,26],[22,31,7,7],[25,0,9,7],[25,11,9,16,"fetchCodes"],[25,21,9,7],[25,24,9,29],[26,0,10,4],[26,11,10,11],[26,28,10,18,"dispatch"],[26,36,10,11],[26,38,10,28,"getState"],[26,46,10,11],[27,0,10,11],[28,0,10,11],[29,0,10,11],[30,0,10,11],[31,0,10,11],[32,0,11,8,"dispatch"],[32,14,11,8,"dispatch"],[32,22,11,16],[32,23,11,17,"startCodeFetching"],[32,40,11,34],[32,42,11,16],[32,43,11,8],[33,0,12,14,"state"],[33,14,12,14,"state"],[33,19,10,11],[33,22,12,22,"getState"],[33,30,12,30],[33,32,10,11],[34,0,13,14,"lastFetch"],[34,14,13,14,"lastFetch"],[34,23,10,11],[34,26,13,26,"state"],[34,31,13,31],[34,32,13,32,"codes"],[34,37,13,26],[34,38,13,38,"lastFetch"],[34,47,10,11],[35,0,14,8,"console"],[35,14,14,8,"console"],[35,21,14,15],[35,22,14,16,"log"],[35,25,14,8],[35,26,14,20,"lastFetch"],[35,35,14,8],[36,0,10,11],[37,0,22,18,"result"],[37,14,22,18,"result"],[37,20,10,11],[37,23,22,27],[37,25,10,11],[38,0,10,11],[39,0,10,11],[39,48,23,36,"firestore"],[39,68,23,46,"collection"],[39,78,23,36],[39,79,23,57],[39,90,23,36],[39,92,23,70,"limit"],[39,97,23,36],[39,98,23,76],[39,99,23,36],[39,101,23,79,"get"],[39,104,23,36],[39,106,10,11],[41,0,10,11],[42,0,23,18,"companies"],[42,14,23,18,"companies"],[42,23,10,11],[43,0,24,18,"promiseArr"],[43,14,24,18,"promiseArr"],[43,24,10,11],[43,27,24,31],[43,29,10,11],[44,0,26,12,"companies"],[44,14,26,12,"companies"],[44,23,26,21],[44,24,26,22,"forEach"],[44,31,26,12],[44,32,26,30],[44,42,26,30,"company"],[44,49,26,37],[44,51,26,41],[45,0,27,16],[45,20,27,22,"data"],[45,24,27,26],[45,27,27,29,"company"],[45,34,27,36],[45,35,27,37,"data"],[45,39,27,29],[45,41,27,16],[46,0,29,16,"result"],[46,16,29,16,"result"],[46,22,29,22],[46,23,29,23,"push"],[46,27,29,16],[46,28,29,28],[47,0,30,20,"storeName"],[47,18,30,20,"storeName"],[47,27,30,29],[47,29,30,31,"data"],[47,33,30,35],[47,34,30,36,"name"],[47,38,29,28],[48,0,31,20,"logoImage"],[48,18,31,20,"logoImage"],[48,27,31,29],[48,29,31,31,"data"],[48,33,31,35],[48,34,31,36,"logoUrl"],[48,41,29,28],[49,0,32,20,"backgroundImage"],[49,18,32,20,"backgroundImage"],[49,33,32,35],[49,35,32,37,"data"],[49,39,32,41],[49,40,32,42,"backgroundUrl"],[49,53,29,28],[50,0,33,20,"codes"],[50,18,33,20,"codes"],[50,23,33,25],[50,25,33,27],[51,0,29,28],[51,17,29,16],[52,0,36,16,"promiseArr"],[52,16,36,16,"promiseArr"],[52,26,36,26],[52,27,36,27,"push"],[52,31,36,16],[52,32,37,20,"firestore"],[52,52,37,30,"collection"],[52,62,37,20],[52,63,37,41],[52,74,37,20],[52,76,37,54,"doc"],[52,79,37,20],[52,80,37,58,"company"],[52,87,37,65],[52,88,37,66,"id"],[52,90,37,20],[52,92,37,70,"collection"],[52,102,37,20],[52,103,37,81],[52,110,37,20],[52,112,37,90,"get"],[52,115,37,20],[52,117,36,16],[53,0,39,13],[53,15,26,12],[54,0,10,11],[55,0,10,11],[55,48,41,39,"Promise"],[55,55,41,46],[55,56,41,47,"all"],[55,59,41,39],[55,60,41,51,"promiseArr"],[55,70,41,39],[55,71,10,11],[57,0,10,11],[58,0,41,18,"companyCodes"],[58,14,41,18,"companyCodes"],[58,26,10,11],[59,0,43,12,"companyCodes"],[59,14,43,12,"companyCodes"],[59,26,43,24],[59,27,43,25,"forEach"],[59,34,43,12],[59,35,43,33],[59,45,43,34,"item"],[59,49,43,33],[59,51,43,40,"i"],[59,52,43,33],[59,54,43,46],[60,0,45,16],[60,20,45,19],[60,21,45,20,"item"],[60,25,45,24],[60,26,45,25,"empty"],[60,31,45,16],[60,33,45,32],[61,0,46,20,"item"],[61,18,46,20,"item"],[61,22,46,24],[61,23,46,25,"docs"],[61,27,46,20],[61,28,46,30,"forEach"],[61,35,46,20],[61,36,46,38],[61,46,46,38,"code"],[61,50,46,42],[61,52,46,46],[62,0,47,24,"code"],[62,20,47,24,"code"],[62,24,47,28],[62,27,47,31,"code"],[62,31,47,35],[62,32,47,36,"data"],[62,36,47,31],[62,38,47,24],[63,0,48,23],[63,24,48,29,"codeObj"],[63,31,48,36],[63,34,48,39],[64,0,49,27,"name"],[64,22,49,27,"name"],[64,26,49,31],[64,28,49,33,"code"],[64,32,49,37],[64,33,49,38,"name"],[64,37,48,39],[65,0,50,27,"description"],[65,22,50,27,"description"],[65,33,50,38],[65,35,50,40,"code"],[65,39,50,44],[65,40,50,45,"description"],[65,51,48,39],[66,0,51,27,"inStock"],[66,22,51,27,"inStock"],[66,29,51,34],[66,31,51,36,"code"],[66,35,51,40],[66,36,51,41,"currentStock"],[66,48,48,39],[67,0,52,27,"discount"],[67,22,52,27,"discount"],[67,30,52,35],[67,32,52,37,"code"],[67,36,52,41],[67,37,52,42,"discount"],[67,45,48,39],[68,0,53,27,"price"],[68,22,53,27,"price"],[68,27,53,32],[68,29,53,34,"code"],[68,33,53,38],[68,34,53,39,"price"],[68,39,48,39],[69,0,54,27,"codeVariations"],[69,22,54,27,"codeVariations"],[69,36,54,41],[69,38,54,43,"code"],[69,42,54,47],[69,43,54,48,"codes"],[70,0,48,39],[70,21,48,23],[71,0,57,23,"result"],[71,20,57,23,"result"],[71,26,57,29],[71,27,57,30,"i"],[71,28,57,29],[71,29,57,23],[71,30,57,33,"codes"],[71,35,57,23],[71,36,57,39,"push"],[71,40,57,23],[71,41,57,44,"codeObj"],[71,48,57,23],[72,0,58,21],[72,19,46,20],[73,0,59,17],[74,0,61,13],[74,15,43,12],[75,0,63,12,"dispatch"],[75,14,63,12,"dispatch"],[75,22,63,20],[75,23,63,21,"codeFetchingSuccess"],[75,42,63,40],[75,43,63,41,"result"],[75,49,63,40],[75,50,63,20],[75,51,63,12],[76,0,64,12,"dispatch"],[76,14,64,12,"dispatch"],[76,22,64,20],[76,23,64,21,"codeLastFetch"],[76,36,64,34],[76,37,64,35,"Math"],[76,41,64,39],[76,42,64,40,"floor"],[76,47,64,35],[76,48,64,46,"Date"],[76,52,64,50],[76,53,64,51,"now"],[76,56,64,46],[76,61,64,59],[76,65,64,35],[76,66,64,34],[76,67,64,20],[76,68,64,12],[77,0,10,11],[78,0,10,11],[80,0,10,11],[81,0,10,11],[82,0,10,11],[83,0,67,12,"dispatch"],[83,14,67,12,"dispatch"],[83,22,67,20],[83,23,67,21,"codeFetchingError"],[83,40,67,38],[83,41,67,39],[83,53,67,45,"message"],[83,60,67,38],[83,61,67,20],[83,62,67,12],[85,0,10,11],[86,0,10,11],[87,0,10,11],[88,0,10,11],[89,0,10,11],[90,0,10,11],[91,0,10,11],[91,5,10,4],[92,0,71,1],[94,0,73,0],[94,11,73,9,"startCodeFetching"],[94,28,73,0],[94,31,73,29],[95,0,74,4],[95,11,74,11],[96,0,75,8,"type"],[96,6,75,8,"type"],[96,10,75,12],[96,12,75,14,"FETCH_CODES_START"],[97,0,74,11],[97,5,74,4],[98,0,77,1],[100,0,79,0],[100,11,79,9,"codeFetchingSuccess"],[100,30,79,0],[100,31,79,29,"codes"],[100,36,79,0],[100,38,79,36],[101,0,80,4],[101,11,80,11],[102,0,81,8,"type"],[102,6,81,8,"type"],[102,10,81,12],[102,12,81,14,"FETCH_CODE_SUCCESS"],[102,30,80,11],[103,0,82,8,"codes"],[103,6,82,8,"codes"],[103,11,82,13],[103,13,82,8,"codes"],[104,0,80,11],[104,5,80,4],[105,0,84,1],[107,0,86,0],[107,11,86,9,"codeFetchingError"],[107,28,86,0],[107,29,86,27,"error"],[107,34,86,0],[107,36,86,34],[108,0,87,4],[108,11,87,11],[109,0,88,8,"type"],[109,6,88,8,"type"],[109,10,88,12],[109,12,88,14,"FETCH_CODE_ERROR"],[109,28,87,11],[110,0,89,8,"error"],[110,6,89,8,"error"],[110,11,89,13],[110,13,89,8,"error"],[111,0,87,11],[111,5,87,4],[112,0,91,1],[114,0,93,0],[114,11,93,9,"codeLastFetch"],[114,24,93,0],[114,25,93,23,"lastFetch"],[114,34,93,0],[114,36,93,34],[115,0,94,4],[115,11,94,11],[116,0,95,8,"type"],[116,6,95,8,"type"],[116,10,95,12],[116,12,95,14,"LAST_FETCH"],[116,22,94,11],[117,0,96,8,"lastFetch"],[117,6,96,8,"lastFetch"],[117,15,96,17],[117,17,96,8,"lastFetch"],[118,0,94,11],[118,5,94,4],[119,0,98,1]]},"type":"js/module"}]}
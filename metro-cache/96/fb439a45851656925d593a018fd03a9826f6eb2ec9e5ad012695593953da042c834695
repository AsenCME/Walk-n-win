{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"moment","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./src/includes/GoogleFit","data":{"isAsync":false}},{"name":"./constants/points","data":{"isAsync":false}},{"name":"./src/actions/userActions","data":{"isAsync":false}},{"name":"./src/actions/activityActions","data":{"isAsync":false}},{"name":"./store/createStore","data":{"isAsync":false}},{"name":"./src/includes/DateUtil","data":{"isAsync":false}},{"name":"./src/includes/User","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.onAppLaunch = onAppLaunch;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _moment = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"moment\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _GoogleFit = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./src/includes/GoogleFit\"));\n\n  var _points = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./constants/points\"));\n\n  var _userActions = _$$_REQUIRE(_dependencyMap[6], \"./src/actions/userActions\");\n\n  var _activityActions = _$$_REQUIRE(_dependencyMap[7], \"./src/actions/activityActions\");\n\n  var _createStore = _$$_REQUIRE(_dependencyMap[8], \"./store/createStore\");\n\n  var _DateUtil = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./src/includes/DateUtil\"));\n\n  var _User = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./src/includes/User\"));\n\n  var persistListener = null;\n\n  function onAppLaunch() {\n    return new Promise(function _callee(resolve, reject) {\n      var isEnabled;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_GoogleFit.default.isAuthenticated());\n\n            case 2:\n              isEnabled = _context.sent;\n\n              if (!isEnabled) {\n                _GoogleFit.default.onAuthorization(function () {\n                  checkIfStoreIsRehydrated(resolve, reject);\n                });\n\n                _GoogleFit.default.onAuthorizationFail(function () {\n                  console.log(arguments);\n\n                  _reactNative.Alert.alert('Грешка', 'Не можахте да се свържете с Goole Fit. Затворете приложението и опитайте относо.');\n\n                  checkIfStoreIsRehydrated(resolve, reject);\n                });\n\n                _GoogleFit.default.authenticate();\n              } else {\n                checkIfStoreIsRehydrated(resolve, reject);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n  }\n\n  function onStartUp() {\n    var state, lastSync;\n    return _regenerator.default.async(function onStartUp$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            state = _createStore.store.getState();\n\n            if (state.user.lastSync) {\n              console.log('user is not fresh');\n              lastSync = _DateUtil.default.unixToMoment(state.user.lastSync);\n\n              try {} catch (err) {\n                console.log('error');\n              }\n            } else {\n              console.log('Fresh user');\n              initializeReduxState();\n            }\n\n            startPedometerListener();\n            startAppStateListener();\n            console.log(_createStore.store.getState());\n            setTimeout(function () {\n              syncData();\n            }, 600000);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function convertStepsToPoints(lastSync, state) {\n    var options, data, totalSteps, pointsFromState, creditsFromState, updatedPoints, newCredits;\n    return _regenerator.default.async(function convertStepsToPoints$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = {\n              startDate: lastSync.toISOString(),\n              endDate: (0, _moment.default)().toISOString()\n            };\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regenerator.default.awrap(_GoogleFit.default.getStepsFromDate(options));\n\n          case 4:\n            data = _context3.sent;\n\n            if (!(!data instanceof Array)) {\n              _context3.next = 7;\n              break;\n            }\n\n            throw new Error(\"Couldn't get data from Google FIt\");\n\n          case 7:\n            totalSteps = data.reduce(function (total, currentVal) {\n              return total + currentVal.value;\n            }, 0);\n            pointsFromState = Number.isInteger(state.user.totalPoints) ? parseInt(state.user.totalPoints) : 0;\n            creditsFromState = state.user.credits;\n            updatedPoints = totalSteps + pointsFromState;\n            newCredits = getCreditsByPoints(updatedPoints);\n\n            if (newCredits != creditsFromState) {}\n\n            console.log({\n              updatedPoints: updatedPoints,\n              newCredits: newCredits,\n              totalSteps: totalSteps,\n              pointsFromState: pointsFromState\n            });\n\n            _createStore.store.dispatch((0, _userActions.saveUser)({\n              totalPoints: updatedPoints,\n              credits: newCredits\n            }));\n\n            _createStore.store.dispatch((0, _userActions.setLastSync)(_DateUtil.default.unixTimeStamp()));\n\n            _context3.next = 22;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0.message);\n            console.log('An Error has occured on converting steps to points');\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 18]]);\n  }\n\n  function getDailyData(state) {\n    var createdAt, startDate, _ref, steps, distance, calories;\n\n    return _regenerator.default.async(function getDailyData$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            createdAt = _DateUtil.default.unixToMoment(state.user.createdAt);\n            startDate = createdAt.isSame((0, _moment.default)(), 'day') ? createdAt : (0, _moment.default)().startOf('day');\n            _context4.prev = 2;\n            _context4.next = 5;\n            return _regenerator.default.awrap(_GoogleFit.default.fetchDataSingle(startDate, false));\n\n          case 5:\n            _ref = _context4.sent;\n            steps = _ref.steps;\n            distance = _ref.distance;\n            calories = _ref.calories;\n            console.log({\n              steps: steps,\n              distance: distance,\n              calories: calories\n            });\n\n            _createStore.store.dispatch((0, _activityActions.setData)(steps, distance, calories));\n\n            _context4.next = 17;\n            break;\n\n          case 13:\n            _context4.prev = 13;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.log(_context4.t0);\n            console.log('Could not get Steps');\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[2, 13]]);\n  }\n\n  function initializeReduxState() {\n    var timeStamp = _DateUtil.default.unixTimeStamp();\n\n    console.log(timeStamp);\n\n    _createStore.store.dispatch((0, _userActions.saveUser)({\n      lastSync: timeStamp\n    }));\n\n    _createStore.store.dispatch((0, _activityActions.setData)(0, 0, 0));\n\n    console.log('initializeRedux');\n  }\n\n  function getCreditsByPoints(totalPoints) {\n    if (_points.default[0] > totalPoints) return 0;\n    var lvl = 0;\n\n    for (var i = 0; i < _points.default.length; i++) {\n      if (_points.default[i] > totalPoints) {\n        lvl = i + 1;\n        break;\n      }\n    }\n\n    return lvl;\n  }\n\n  function startAppStateListener() {\n    _reactNative.AppState.addEventListener('change', function (state) {\n      if (state === 'background' || state === 'active') {\n        console.log('changeState');\n\n        _createStore.store.dispatch((0, _userActions.setLastEnter)(_DateUtil.default.unixTimeStamp()));\n      }\n    });\n  }\n\n  function startPedometerListener() {\n    _createStore.store.dispatch((0, _activityActions.setPivot)());\n\n    _createStore.store.dispatch((0, _activityActions.startListener)());\n\n    _GoogleFit.default.startPedometerListener(function (data) {\n      var steps = data.numberOfSteps;\n      console.log(steps);\n\n      _createStore.store.dispatch((0, _activityActions.pedometerUpdate)(steps));\n    });\n  }\n\n  function syncData() {\n    _User.default.sync();\n\n    _GoogleFit.default.sync();\n  }\n\n  function checkIfStoreIsRehydrated(resolve, reject) {\n    if (_createStore.store.getState()._persist.rehydrated) onStartUp().then(function () {\n      console.log('data loaded');\n      resolve();\n    }).catch(function () {\n      console.log('error loading');\n      reject();\n    });else {\n      persistListener = _createStore.store.subscribe(function () {\n        if (_createStore.store.getState()._persist.rehydrated) {\n          persistListener.remove();\n          onStartUp().then(function () {\n            console.log('data loaded');\n            resolve();\n          }).catch(function () {\n            console.log('error loading');\n            reject();\n          });\n        }\n      });\n    }\n  }\n});","map":[[11,0,1,0],[13,0,2,0],[15,0,3,0],[17,0,4,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,8,0],[27,0,9,0],[29,0,11,0],[29,6,11,4,"persistListener"],[29,21,11,19],[29,24,11,22],[29,28,11,0],[31,0,13,7],[31,11,13,16,"onAppLaunch"],[31,22,13,7],[31,25,13,30],[32,0,14,4],[32,11,14,11],[32,15,14,15,"Promise"],[32,22,14,11],[32,23,14,24],[32,40,14,31,"resolve"],[32,47,14,24],[32,49,14,40,"reject"],[32,55,14,24],[33,0,14,24],[34,0,14,24],[35,0,14,24],[36,0,14,24],[37,0,14,24],[38,0,14,24],[39,0,14,24],[39,48,15,32,"GoogleFit"],[39,67,15,42,"isAuthenticated"],[39,82,15,32],[39,84,14,24],[41,0,14,24],[42,0,15,14,"isEnabled"],[42,14,15,14,"isEnabled"],[42,23,14,24],[44,0,16,8],[44,18,16,12],[44,19,16,14,"isEnabled"],[44,28,16,8],[44,30,16,26],[45,0,17,12,"GoogleFit"],[45,35,17,22,"onAuthorization"],[45,50,17,12],[45,51,17,38],[45,63,17,49],[46,0,18,16,"checkIfStoreIsRehydrated"],[46,18,18,16,"checkIfStoreIsRehydrated"],[46,42,18,40],[46,43,18,41,"resolve"],[46,50,18,40],[46,52,18,50,"reject"],[46,58,18,40],[46,59,18,16],[47,0,19,13],[47,17,17,12],[49,0,21,12,"GoogleFit"],[49,35,21,22,"onAuthorizationFail"],[49,54,21,12],[49,55,21,42],[49,67,21,53],[50,0,22,16,"console"],[50,18,22,16,"console"],[50,25,22,23],[50,26,22,24,"log"],[50,29,22,16],[50,30,22,28,"arguments"],[50,39,22,16],[52,0,23,16,"Alert"],[52,37,23,22,"alert"],[52,42,23,16],[52,43,23,28],[52,51,23,16],[52,53,23,38],[52,135,23,16],[54,0,24,16,"checkIfStoreIsRehydrated"],[54,18,24,16,"checkIfStoreIsRehydrated"],[54,42,24,40],[54,43,24,41,"resolve"],[54,50,24,40],[54,52,24,50,"reject"],[54,58,24,40],[54,59,24,16],[55,0,25,13],[55,17,21,12],[57,0,27,12,"GoogleFit"],[57,35,27,22,"authenticate"],[57,47,27,12],[58,0,28,9],[58,15,16,8],[58,21,29,13],[59,0,30,12,"checkIfStoreIsRehydrated"],[59,16,30,12,"checkIfStoreIsRehydrated"],[59,40,30,36],[59,41,30,37,"resolve"],[59,48,30,36],[59,50,30,46,"reject"],[59,56,30,36],[59,57,30,12],[60,0,31,9],[62,0,14,24],[63,0,14,24],[64,0,14,24],[65,0,14,24],[66,0,14,24],[67,0,14,24],[68,0,14,24],[68,5,14,11],[68,6,14,4],[69,0,33,1],[71,0,35,0],[71,11,35,15,"onStartUp"],[71,20,35,0],[72,0,35,0],[73,0,35,0],[74,0,35,0],[75,0,35,0],[76,0,35,0],[77,0,36,10,"state"],[77,12,36,10,"state"],[77,17,35,0],[77,20,36,18,"store"],[77,39,36,24,"getState"],[77,47,36,18],[77,49,35,0],[79,0,37,4],[79,16,37,7,"state"],[79,21,37,12],[79,22,37,13,"user"],[79,26,37,7],[79,27,37,18,"lastSync"],[79,35,37,4],[79,37,37,28],[80,0,38,8,"console"],[80,14,38,8,"console"],[80,21,38,15],[80,22,38,16,"log"],[80,25,38,8],[80,26,38,20],[80,45,38,8],[81,0,39,14,"lastSync"],[81,14,39,14,"lastSync"],[81,22,37,28],[81,25,39,25,"DateUtil"],[81,43,39,34,"unixToMoment"],[81,55,39,25],[81,56,39,47,"state"],[81,61,39,52],[81,62,39,53,"user"],[81,66,39,47],[81,67,39,58,"lastSync"],[81,75,39,25],[81,76,37,28],[83,0,41,8],[83,18,41,12],[83,19,45,9],[83,20,41,8],[83,21,45,10],[83,28,45,16,"err"],[83,31,45,10],[83,33,45,21],[84,0,46,12,"console"],[84,16,46,12,"console"],[84,23,46,19],[84,24,46,20,"log"],[84,27,46,12],[84,28,46,24],[84,35,46,12],[85,0,47,9],[86,0,49,5],[86,13,37,4],[86,19,49,11],[87,0,50,8,"console"],[87,14,50,8,"console"],[87,21,50,15],[87,22,50,16,"log"],[87,25,50,8],[87,26,50,20],[87,38,50,8],[88,0,51,8,"initializeReduxState"],[88,14,51,8,"initializeReduxState"],[88,34,51,28],[89,0,52,5],[91,0,54,4,"startPedometerListener"],[91,12,54,4,"startPedometerListener"],[91,34,54,26],[92,0,55,4,"startAppStateListener"],[92,12,55,4,"startAppStateListener"],[92,33,55,25],[93,0,57,4,"console"],[93,12,57,4,"console"],[93,19,57,11],[93,20,57,12,"log"],[93,23,57,4],[93,24,57,16,"store"],[93,43,57,22,"getState"],[93,51,57,16],[93,53,57,4],[94,0,59,4,"setTimeout"],[94,12,59,4,"setTimeout"],[94,22,59,14],[94,23,59,15],[94,35,59,21],[95,0,60,8,"syncData"],[95,14,60,8,"syncData"],[95,22,60,16],[96,0,61,5],[96,13,59,14],[96,15,61,7],[96,21,59,14],[96,22,59,4],[98,0,35,0],[99,0,35,0],[100,0,35,0],[101,0,35,0],[102,0,35,0],[103,0,35,0],[104,0,35,0],[106,0,69,0],[106,11,69,15,"convertStepsToPoints"],[106,31,69,0],[106,32,69,36,"lastSync"],[106,40,69,0],[106,42,69,46,"state"],[106,47,69,0],[107,0,69,0],[108,0,69,0],[109,0,69,0],[110,0,69,0],[111,0,69,0],[112,0,70,10,"options"],[112,12,70,10,"options"],[112,19,69,0],[112,22,70,20],[113,0,71,8,"startDate"],[113,14,71,8,"startDate"],[113,23,71,17],[113,25,71,19,"lastSync"],[113,33,71,27],[113,34,71,28,"toISOString"],[113,45,71,19],[113,47,70,20],[114,0,72,8,"endDate"],[114,14,72,8,"endDate"],[114,21,72,15],[114,23,72,17],[114,46,72,26,"toISOString"],[114,57,72,17],[115,0,70,20],[115,13,69,0],[116,0,69,0],[117,0,69,0],[118,0,69,0],[118,46,80,27,"GoogleFit"],[118,65,80,37,"getStepsFromDate"],[118,81,80,27],[118,82,80,54,"options"],[118,89,80,27],[118,90,69,0],[120,0,69,0],[121,0,80,14,"data"],[121,12,80,14,"data"],[121,16,69,0],[123,0,69,0],[123,18,81,11],[123,19,81,12,"data"],[123,23,81,11],[123,35,81,28,"Array"],[123,40,69,0],[124,0,69,0],[125,0,69,0],[126,0,69,0],[128,0,69,0],[128,18,81,41],[128,22,81,45,"Error"],[128,27,81,41],[128,28,81,51],[128,63,81,41],[128,64,69,0],[130,0,69,0],[131,0,84,14,"totalSteps"],[131,12,84,14,"totalSteps"],[131,22,69,0],[131,25,84,27,"data"],[131,29,84,31],[131,30,84,32,"reduce"],[131,36,84,27],[131,37,84,39],[131,47,84,40,"total"],[131,52,84,39],[131,54,84,47,"currentVal"],[131,64,84,39],[132,0,84,39],[132,21,84,62,"total"],[132,26,84,67],[132,29,84,70,"currentVal"],[132,39,84,80],[132,40,84,81,"value"],[132,45,84,39],[133,0,84,39],[133,13,84,27],[133,15,84,88],[133,16,84,27],[133,17,69,0],[134,0,85,14,"pointsFromState"],[134,12,85,14,"pointsFromState"],[134,27,69,0],[134,30,85,32,"Number"],[134,36,85,38],[134,37,85,39,"isInteger"],[134,46,85,32],[134,47,85,49,"state"],[134,52,85,54],[134,53,85,55,"user"],[134,57,85,49],[134,58,85,60,"totalPoints"],[134,69,85,32],[134,73,85,75,"parseInt"],[134,81,85,83],[134,82,85,84,"state"],[134,87,85,89],[134,88,85,90,"user"],[134,92,85,84],[134,93,85,95,"totalPoints"],[134,104,85,83],[134,105,85,32],[134,108,85,110],[134,109,69,0],[135,0,86,14,"creditsFromState"],[135,12,86,14,"creditsFromState"],[135,28,69,0],[135,31,86,33,"state"],[135,36,86,38],[135,37,86,39,"user"],[135,41,86,33],[135,42,86,44,"credits"],[135,49,69,0],[136,0,88,14,"updatedPoints"],[136,12,88,14,"updatedPoints"],[136,25,69,0],[136,28,88,30,"totalSteps"],[136,38,88,40],[136,41,88,43,"pointsFromState"],[136,56,69,0],[137,0,90,14,"newCredits"],[137,12,90,14,"newCredits"],[137,22,69,0],[137,25,90,27,"getCreditsByPoints"],[137,43,90,45],[137,44,90,46,"updatedPoints"],[137,57,90,45],[137,58,69,0],[139,0,92,8],[139,16,92,11,"newCredits"],[139,26,92,21],[139,30,92,25,"creditsFromState"],[139,46,92,8],[139,48,92,43],[139,49,94,9],[141,0,96,8,"console"],[141,12,96,8,"console"],[141,19,96,15],[141,20,96,16,"log"],[141,23,96,8],[141,24,96,20],[142,0,96,22,"updatedPoints"],[142,14,96,22,"updatedPoints"],[142,27,96,35],[142,29,96,22,"updatedPoints"],[142,42,96,20],[143,0,96,37,"newCredits"],[143,14,96,37,"newCredits"],[143,24,96,47],[143,26,96,37,"newCredits"],[143,36,96,20],[144,0,96,49,"totalSteps"],[144,14,96,49,"totalSteps"],[144,24,96,59],[144,26,96,49,"totalSteps"],[144,36,96,20],[145,0,96,61,"pointsFromState"],[145,14,96,61,"pointsFromState"],[145,29,96,76],[145,31,96,61,"pointsFromState"],[146,0,96,20],[146,13,96,8],[148,0,99,8,"store"],[148,31,99,14,"dispatch"],[148,39,99,8],[148,40,99,23],[148,67,99,32],[149,0,100,12,"totalPoints"],[149,14,100,12,"totalPoints"],[149,25,100,23],[149,27,100,25,"updatedPoints"],[149,40,99,32],[150,0,101,12,"credits"],[150,14,101,12,"credits"],[150,21,101,19],[150,23,101,21,"newCredits"],[151,0,99,32],[151,13,99,23],[151,14,99,8],[153,0,104,8,"store"],[153,31,104,14,"dispatch"],[153,39,104,8],[153,40,104,23],[153,70,104,35,"DateUtil"],[153,88,104,44,"unixTimeStamp"],[153,101,104,35],[153,103,104,23],[153,104,104,8],[155,0,69,0],[156,0,69,0],[158,0,69,0],[159,0,69,0],[160,0,69,0],[161,0,106,8,"console"],[161,12,106,8,"console"],[161,19,106,15],[161,20,106,16,"log"],[161,23,106,8],[161,24,106,20],[161,37,106,24,"message"],[161,44,106,8],[162,0,107,8,"console"],[162,12,107,8,"console"],[162,19,107,15],[162,20,107,16,"log"],[162,23,107,8],[162,24,107,20],[162,76,107,8],[164,0,69,0],[165,0,69,0],[166,0,69,0],[167,0,69,0],[168,0,69,0],[169,0,69,0],[170,0,69,0],[172,0,115,0],[172,11,115,15,"getDailyData"],[172,23,115,0],[172,24,115,28,"state"],[172,29,115,0],[173,0,115,0],[175,0,115,0],[176,0,115,0],[177,0,115,0],[178,0,115,0],[179,0,116,10,"createdAt"],[179,12,116,10,"createdAt"],[179,21,115,0],[179,24,116,22,"DateUtil"],[179,42,116,31,"unixToMoment"],[179,54,116,22],[179,55,116,44,"state"],[179,60,116,49],[179,61,116,50,"user"],[179,65,116,44],[179,66,116,55,"createdAt"],[179,75,116,22],[179,76,115,0],[180,0,117,10,"startDate"],[180,12,117,10,"startDate"],[180,21,115,0],[180,24,117,22,"createdAt"],[180,33,117,31],[180,34,117,32,"isSame"],[180,40,117,22],[180,41,117,39],[180,63,117,22],[180,65,117,49],[180,70,117,22],[180,74,117,58,"createdAt"],[180,83,117,22],[180,86,117,70],[180,109,117,79,"startOf"],[180,116,117,70],[180,117,117,87],[180,122,117,70],[180,123,115,0],[181,0,115,0],[182,0,115,0],[183,0,115,0],[183,46,120,52,"GoogleFit"],[183,65,120,62,"fetchDataSingle"],[183,80,120,52],[183,81,120,78,"startDate"],[183,90,120,52],[183,92,120,89],[183,97,120,52],[183,98,115,0],[185,0,115,0],[186,0,115,0],[187,0,120,16,"steps"],[187,12,120,16,"steps"],[187,17,115,0],[187,25,120,16,"steps"],[187,30,115,0],[188,0,120,23,"distance"],[188,12,120,23,"distance"],[188,20,115,0],[188,28,120,23,"distance"],[188,36,115,0],[189,0,120,33,"calories"],[189,12,120,33,"calories"],[189,20,115,0],[189,28,120,33,"calories"],[189,36,115,0],[190,0,121,8,"console"],[190,12,121,8,"console"],[190,19,121,15],[190,20,121,16,"log"],[190,23,121,8],[190,24,121,20],[191,0,121,22,"steps"],[191,14,121,22,"steps"],[191,19,121,27],[191,21,121,22,"steps"],[191,26,121,20],[192,0,121,29,"distance"],[192,14,121,29,"distance"],[192,22,121,37],[192,24,121,29,"distance"],[192,32,121,20],[193,0,121,39,"calories"],[193,14,121,39,"calories"],[193,22,121,47],[193,24,121,39,"calories"],[194,0,121,20],[194,13,121,8],[196,0,122,8,"store"],[196,31,122,14,"dispatch"],[196,39,122,8],[196,40,122,23],[196,70,122,31,"steps"],[196,75,122,23],[196,77,122,38,"distance"],[196,85,122,23],[196,87,122,48,"calories"],[196,95,122,23],[196,96,122,8],[198,0,115,0],[199,0,115,0],[201,0,115,0],[202,0,115,0],[203,0,115,0],[204,0,124,8,"console"],[204,12,124,8,"console"],[204,19,124,15],[204,20,124,16,"log"],[204,23,124,8],[205,0,125,8,"console"],[205,12,125,8,"console"],[205,19,125,15],[205,20,125,16,"log"],[205,23,125,8],[205,24,125,20],[205,45,125,8],[207,0,115,0],[208,0,115,0],[209,0,115,0],[210,0,115,0],[211,0,115,0],[212,0,115,0],[213,0,115,0],[215,0,130,0],[215,11,130,9,"initializeReduxState"],[215,31,130,0],[215,34,130,32],[216,0,131,4],[216,8,131,10,"timeStamp"],[216,17,131,19],[216,20,131,22,"DateUtil"],[216,38,131,31,"unixTimeStamp"],[216,51,131,22],[216,53,131,4],[218,0,132,4,"console"],[218,4,132,4,"console"],[218,11,132,11],[218,12,132,12,"log"],[218,15,132,4],[218,16,132,16,"timeStamp"],[218,25,132,4],[220,0,133,4,"store"],[220,23,133,10,"dispatch"],[220,31,133,4],[220,32,133,19],[220,59,133,28],[221,0,134,8,"lastSync"],[221,6,134,8,"lastSync"],[221,14,134,16],[221,16,134,18,"timeStamp"],[222,0,133,28],[222,5,133,19],[222,6,133,4],[224,0,137,4,"store"],[224,23,137,10,"dispatch"],[224,31,137,4],[224,32,137,19],[224,62,137,27],[224,63,137,19],[224,65,137,29],[224,66,137,19],[224,68,137,31],[224,69,137,19],[224,70,137,4],[226,0,139,4,"console"],[226,4,139,4,"console"],[226,11,139,11],[226,12,139,12,"log"],[226,15,139,4],[226,16,139,16],[226,33,139,4],[227,0,140,1],[229,0,142,0],[229,11,142,9,"getCreditsByPoints"],[229,29,142,0],[229,30,142,28,"totalPoints"],[229,41,142,0],[229,43,142,41],[230,0,143,4],[230,8,143,7,"Points"],[230,24,143,14],[230,25,143,7],[230,29,143,19,"totalPoints"],[230,40,143,4],[230,42,143,32],[230,49,143,39],[230,50,143,32],[231,0,145,4],[231,8,145,8,"lvl"],[231,11,145,11],[231,14,145,14],[231,15,145,4],[233,0,147,4],[233,9,147,8],[233,13,147,12,"i"],[233,14,147,13],[233,17,147,16],[233,18,147,4],[233,20,147,19,"i"],[233,21,147,20],[233,24,147,23,"Points"],[233,40,147,30,"length"],[233,46,147,4],[233,48,147,38,"i"],[233,49,147,39],[233,51,147,4],[233,53,147,43],[234,0,148,8],[234,10,148,11,"Points"],[234,26,148,18,"i"],[234,27,148,11],[234,31,148,23,"totalPoints"],[234,42,148,8],[234,44,148,36],[235,0,149,12,"lvl"],[235,8,149,12,"lvl"],[235,11,149,15],[235,14,149,18,"i"],[235,15,149,19],[235,18,149,22],[235,19,149,12],[236,0,150,12],[237,0,151,9],[238,0,152,5],[240,0,154,4],[240,11,154,11,"lvl"],[240,14,154,4],[241,0,155,1],[243,0,157,0],[243,11,157,9,"startAppStateListener"],[243,32,157,0],[243,35,157,33],[244,0,158,4,"AppState"],[244,26,158,13,"addEventListener"],[244,42,158,4],[244,43,158,30],[244,51,158,4],[244,53,158,40],[244,63,158,49,"state"],[244,68,158,40],[244,70,158,56],[245,0,159,8],[245,10,159,11,"state"],[245,15,159,16],[245,20,159,21],[245,32,159,11],[245,36,159,37,"state"],[245,41,159,42],[245,46,159,47],[245,54,159,8],[245,56,159,57],[246,0,160,12,"console"],[246,8,160,12,"console"],[246,15,160,19],[246,16,160,20,"log"],[246,19,160,12],[246,20,160,24],[246,33,160,12],[248,0,161,12,"store"],[248,27,161,18,"dispatch"],[248,35,161,12],[248,36,161,27],[248,67,161,40,"DateUtil"],[248,85,161,49,"unixTimeStamp"],[248,98,161,40],[248,100,161,27],[248,101,161,12],[249,0,162,9],[250,0,163,5],[250,5,158,4],[251,0,164,1],[253,0,166,0],[253,11,166,9,"startPedometerListener"],[253,33,166,0],[253,36,166,34],[254,0,167,4,"store"],[254,23,167,10,"dispatch"],[254,31,167,4],[254,32,167,19],[254,64,167,4],[256,0,168,4,"store"],[256,23,168,10,"dispatch"],[256,31,168,4],[256,32,168,19],[256,69,168,4],[258,0,170,4,"GoogleFit"],[258,23,170,14,"startPedometerListener"],[258,45,170,4],[258,46,170,37],[258,56,170,46,"data"],[258,60,170,37],[258,62,170,51],[259,0,171,8],[259,10,171,14,"steps"],[259,15,171,19],[259,18,171,22,"data"],[259,22,171,26],[259,23,171,27,"numberOfSteps"],[259,36,171,8],[260,0,172,8,"console"],[260,6,172,8,"console"],[260,13,172,15],[260,14,172,16,"log"],[260,17,172,8],[260,18,172,20,"steps"],[260,23,172,8],[262,0,173,8,"store"],[262,25,173,14,"dispatch"],[262,33,173,8],[262,34,173,23],[262,72,173,39,"steps"],[262,77,173,23],[262,78,173,8],[263,0,174,5],[263,5,170,4],[264,0,175,1],[266,0,177,0],[266,11,177,9,"syncData"],[266,19,177,0],[266,22,177,20],[267,0,178,4,"User"],[267,18,178,9,"sync"],[267,22,178,4],[269,0,179,4,"GoogleFit"],[269,23,179,14,"sync"],[269,27,179,4],[270,0,180,1],[272,0,182,0],[272,11,182,9,"checkIfStoreIsRehydrated"],[272,35,182,0],[272,36,182,34,"resolve"],[272,43,182,0],[272,45,182,43,"reject"],[272,51,182,0],[272,53,182,51],[273,0,183,4],[273,8,183,7,"store"],[273,27,183,13,"getState"],[273,35,183,7],[273,38,183,24,"_persist"],[273,46,183,7],[273,47,183,33,"rehydrated"],[273,57,183,4],[273,59,184,8,"onStartUp"],[273,68,184,17],[273,71,185,9,"then"],[273,75,184,8],[273,76,185,14],[273,88,185,20],[274,0,186,12,"console"],[274,6,186,12,"console"],[274,13,186,19],[274,14,186,20,"log"],[274,17,186,12],[274,18,186,24],[274,31,186,12],[275,0,187,12,"resolve"],[275,6,187,12,"resolve"],[275,13,187,19],[276,0,188,9],[276,5,184,8],[276,7,189,9,"catch"],[276,12,184,8],[276,13,189,15],[276,25,189,21],[277,0,190,12,"console"],[277,6,190,12,"console"],[277,13,190,19],[277,14,190,20,"log"],[277,17,190,12],[277,18,190,24],[277,33,190,12],[278,0,191,12,"reject"],[278,6,191,12,"reject"],[278,12,191,18],[279,0,192,9],[279,5,184,8],[279,7,183,4],[279,12,193,9],[280,0,194,8,"persistListener"],[280,6,194,8,"persistListener"],[280,21,194,23],[280,24,194,26,"store"],[280,43,194,32,"subscribe"],[280,52,194,26],[280,53,194,42],[280,65,194,53],[281,0,195,12],[281,12,195,15,"store"],[281,31,195,21,"getState"],[281,39,195,15],[281,42,195,32,"_persist"],[281,50,195,15],[281,51,195,41,"rehydrated"],[281,61,195,12],[281,63,195,53],[282,0,196,16,"persistListener"],[282,10,196,16,"persistListener"],[282,25,196,31],[282,26,196,32,"remove"],[282,32,196,16],[283,0,197,16,"onStartUp"],[283,10,197,16,"onStartUp"],[283,19,197,25],[283,22,198,17,"then"],[283,26,197,16],[283,27,198,22],[283,39,198,28],[284,0,199,20,"console"],[284,12,199,20,"console"],[284,19,199,27],[284,20,199,28,"log"],[284,23,199,20],[284,24,199,32],[284,37,199,20],[285,0,200,20,"resolve"],[285,12,200,20,"resolve"],[285,19,200,27],[286,0,201,17],[286,11,197,16],[286,13,202,17,"catch"],[286,18,197,16],[286,19,202,23],[286,31,202,29],[287,0,203,20,"console"],[287,12,203,20,"console"],[287,19,203,27],[287,20,203,28,"log"],[287,23,203,20],[287,24,203,32],[287,39,203,20],[288,0,204,20,"reject"],[288,12,204,20,"reject"],[288,18,204,26],[289,0,205,17],[289,11,197,16],[290,0,206,13],[291,0,207,9],[291,7,194,26],[291,8,194,8],[292,0,208,5],[293,0,209,1]]},"type":"js/module"}]}